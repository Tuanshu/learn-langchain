# docker build -t learn_langchain_test .

FROM nvidia/cuda:11.8.0-devel-ubuntu22.04 as builder

RUN apt-get update && \
    apt-get install --no-install-recommends -y git vim build-essential python3-dev python3-venv && \
    rm -rf /var/lib/apt/lists/*

WORKDIR /build

RUN python3 -m venv /build/venv

COPY ts_packages /tmp/packages
RUN ls -la /tmp/packages

RUN . /build/venv/bin/activate && \
    pip3 install --upgrade pip setuptools && \
    pip3 install --find-links=/tmp/packages torch torchvision torchaudio

FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

LABEL maintainer="Your Name <your.email@example.com>"
LABEL description="Docker image for GPTQ-for-LLaMa and Text Generation WebUI"

RUN apt-get update && apt-get install build-essential -y

RUN apt-get install --no-install-recommends -y git python3 python3-pip make g++ && \
    rm -rf /var/lib/apt/lists/*

RUN --mount=type=cache,target=/root/.cache/pip pip3 install virtualenv
RUN mkdir /app

WORKDIR /app

COPY ts_packages /app/packages
RUN ls -la /app/packages

RUN virtualenv /app/venv
RUN . /app/venv/bin/activate && \
    pip3 install --upgrade pip setuptools && \
    pip3 install /app/packages/torch-2.0.0-cp310-cp310-manylinux1_x86_64.whl && \
    pip3 install /app/packages/nvidia_cublas_cu11-11.10.3.66-py3-none-manylinux1_x86_64.whl && \
    pip3 install /app/packages/nvidia_cudnn_cu11-8.5.0.96-2-py3-none-manylinux1_x86_64.whl && \
    pip3 install --find-links=/app/packages torch torchvision torchaudio

COPY requirements.txt /app/requirements.txt
COPY requirements_gptq.txt /app/requirements_gptq.txt

RUN . /app/venv/bin/activate && \
    pip3 install -r requirements.txt && pip3 install -r requirements_gptq.txt

COPY . /app/
ENV CLI_ARGS=""
CMD . /app/venv/bin/activate &&  uvicorn servers.vicuna_server:app
